{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","findUser","cn","TodoList","todos","map","App","useState","todosFromServer","setTodos","users","useForm","register","handleSubmit","setValue","reset","errors","formState","action","method","onSubmit","formFields","newTodo","Math","max","titleInput","userSelect","currentTodos","addTodo","required","pattern","value","message","onChange","newValue","target","replace","type","placeholder","validate","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5642834f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\nexport const UserInfo = ({ user }: { user: User }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport usersFromServer from '../../api/users';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nconst findUser = (id: number) => {\n  return usersFromServer.find((user: User) => user.id === id);\n};\n\nexport const TodoInfo = ({ todo }: { todo: Todo }) => {\n  const {\n    id,\n    title,\n    completed = false,\n    userId,\n  } = todo;\n  const user = findUser(userId);\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList = ({ todos }: { todos: Todo[] }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { FormFields } from './types/FormFields';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [users] = useState(usersFromServer);\n\n  const addTodo = (formFields: FormFields) => {\n    const newTodo: Todo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title: formFields.titleInput,\n      completed: false,\n      userId: +formFields.userSelect,\n    };\n\n    setTodos((currentTodos: Todo[]) => {\n      return [\n        ...currentTodos,\n        newTodo,\n      ];\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: {\n      errors,\n    },\n  } = useForm<FormFields>();\n\n  const onSubmit: SubmitHandler<FormFields> = (formFields) => {\n    addTodo(formFields);\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              {...register('titleInput', {\n                required: 'Please enter a title',\n                pattern: {\n                  value: /^[A-ZА-ЯЄІЇ0-9\\s]+$/gi,\n                  message: 'Title is not correct',\n                },\n                onChange: ({ target: { value } }) => {\n                  const newValue = value.replace(/[^A-ZА-ЯЄІЇ0-9\\s]+/gi, '');\n\n                  setValue('titleInput', newValue);\n\n                  return newValue;\n                },\n              })}\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n            />\n          </label>\n\n          {errors.titleInput?.message && (\n            <span className=\"error\">\n              {errors.titleInput.message}\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              {...register('userSelect', {\n                validate: (value: string) => (\n                  value !== '0' || 'Please choose a user'\n                ),\n              })}\n              data-cy=\"userSelect\"\n              defaultValue=\"0\"\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {users.map((user: User) => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {errors.userSelect?.message && (\n            <span className=\"error\">\n              {errors.userSelect.message}\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}